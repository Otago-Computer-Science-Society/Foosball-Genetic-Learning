@startuml ProjectPlan

Class Agent {
    float[] Chromosome
    StateHistory history
    AgentAction GetAgentAction(SystemState)
}

struct AgentAction {
    float[] ActionVector
}

interface System {
    int NumActions
    int NumPercepts
    float ScoreFunction(StateHistory)
    SystemState AdvanceState(SystemState, AgentAction, AgentAction)
}

struct SystemState {
    float[][] state
}

struct StateHistory {
    SystemState[] history
    void AddStateToHistory(SystemState)
}

class Manager {
    int GenerationIndex
    Agent[] Generation
    Agent[] BestAgentByGeneration
}

class Simulator {
    Agent Agent1
    Agent Agent2
    StateHistory History
}

class GeneticBreeder {
    float[] AgentScores
    Agent[] NextGeneration(Agent[])
}

class DataCollector {
    WriteData()
}

Agent *-d- AgentAction
StateHistory *-l- SystemState
Agent *-u- StateHistory

Agent -r-* Manager
System -l-* Manager
Simulator -d- Manager: Concurrent Processing
GeneticBreeder -u-* Manager
DataCollector -u-* Manager

@enduml