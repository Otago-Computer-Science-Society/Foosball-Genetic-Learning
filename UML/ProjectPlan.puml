@startuml ProjectPlan

Class Agent {
    Matrix Chromosome
    float Score
    Vector GetAgentAction(SystemState)
} 

interface System {
    int NumActions
    int NumPercepts
    (*SystemState) InitalizeState()
    AdvanceState(*SystemState, *Agents[])
}

struct SystemState {
    int StateIndex
    Vector state
}

class Manager {
    int GenerationIndex
    Agent[] CurrentGeneration
    SimulateGeneration()
}

class Simulator {
    Agent[] Agents
    StateHistory History
}

class GeneticBreeder {
    Agent[] NextGeneration(Agent[])
}

class DataCollector {
    WriteData()
}

Agent -r-* Manager
System -l-* Manager
GeneticBreeder -u-* Manager
DataCollector -u-* Manager

Simulator -r- SystemState

Simulator -d- Manager: Concurrent Processing

@enduml